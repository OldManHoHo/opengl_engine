// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opengl_engine/game_state.proto

#include "opengl_engine/game_state.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_opengl_5fengine_2fgame_5fstate_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_opengl_5fengine_2fgame_5fstate_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameState_Mat4;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_opengl_5fengine_2fgame_5fstate_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameState_Vec3;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_opengl_5fengine_2fgame_5fstate_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_GameState_ActorState;
}  // namespace protobuf_opengl_5fengine_2fgame_5fstate_2eproto
namespace game_state {
class GameState_Vec3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameState_Vec3>
      _instance;
} _GameState_Vec3_default_instance_;
class GameState_Mat4DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameState_Mat4>
      _instance;
} _GameState_Mat4_default_instance_;
class GameState_ActorStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameState_ActorState>
      _instance;
} _GameState_ActorState_default_instance_;
class GameStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameState>
      _instance;
} _GameState_default_instance_;
}  // namespace game_state
namespace protobuf_opengl_5fengine_2fgame_5fstate_2eproto {
static void InitDefaultsGameState_Vec3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::game_state::_GameState_Vec3_default_instance_;
    new (ptr) ::game_state::GameState_Vec3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::game_state::GameState_Vec3::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameState_Vec3 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameState_Vec3}, {}};

static void InitDefaultsGameState_Mat4() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::game_state::_GameState_Mat4_default_instance_;
    new (ptr) ::game_state::GameState_Mat4();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::game_state::GameState_Mat4::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameState_Mat4 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameState_Mat4}, {}};

static void InitDefaultsGameState_ActorState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::game_state::_GameState_ActorState_default_instance_;
    new (ptr) ::game_state::GameState_ActorState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::game_state::GameState_ActorState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GameState_ActorState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGameState_ActorState}, {
      &protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState_Mat4.base,
      &protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState_Vec3.base,}};

static void InitDefaultsGameState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::game_state::_GameState_default_instance_;
    new (ptr) ::game_state::GameState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::game_state::GameState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GameState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGameState}, {
      &protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState_ActorState.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GameState_Vec3.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameState_Mat4.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameState_ActorState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameState.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_Vec3, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_Vec3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_Vec3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_Vec3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_Vec3, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_Mat4, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_Mat4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_Mat4, val_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_ActorState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_ActorState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_ActorState, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_ActorState, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_ActorState, transform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_ActorState, int_props_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_ActorState, float_props_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState_ActorState, vec3_props_),
  1,
  2,
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::game_state::GameState, actors_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::game_state::GameState_Vec3)},
  { 11, 17, sizeof(::game_state::GameState_Mat4)},
  { 18, 29, sizeof(::game_state::GameState_ActorState)},
  { 35, 41, sizeof(::game_state::GameState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::game_state::_GameState_Vec3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::game_state::_GameState_Mat4_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::game_state::_GameState_ActorState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::game_state::_GameState_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "opengl_engine/game_state.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036opengl_engine/game_state.proto\022\ngame_s"
      "tate\"\253\002\n\tGameState\0220\n\006actors\030\001 \003(\0132 .gam"
      "e_state.GameState.ActorState\032\'\n\004Vec3\022\t\n\001"
      "x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \002(\002\032\023\n\004Mat4\022\013\n"
      "\003val\030\001 \003(\002\032\255\001\n\nActorState\022\n\n\002id\030\001 \002(\005\022\014\n"
      "\004type\030\002 \002(\005\022-\n\ttransform\030\003 \002(\0132\032.game_st"
      "ate.GameState.Mat4\022\021\n\tint_props\030\004 \003(\005\022\023\n"
      "\013float_props\030\005 \003(\002\022.\n\nvec3_props\030\006 \003(\0132\032"
      ".game_state.GameState.Vec3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 346);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "opengl_engine/game_state.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_opengl_5fengine_2fgame_5fstate_2eproto
namespace game_state {

// ===================================================================

void GameState_Vec3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameState_Vec3::kXFieldNumber;
const int GameState_Vec3::kYFieldNumber;
const int GameState_Vec3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameState_Vec3::GameState_Vec3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState_Vec3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:game_state.GameState.Vec3)
}
GameState_Vec3::GameState_Vec3(const GameState_Vec3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:game_state.GameState.Vec3)
}

void GameState_Vec3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

GameState_Vec3::~GameState_Vec3() {
  // @@protoc_insertion_point(destructor:game_state.GameState.Vec3)
  SharedDtor();
}

void GameState_Vec3::SharedDtor() {
}

void GameState_Vec3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameState_Vec3::descriptor() {
  ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameState_Vec3& GameState_Vec3::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState_Vec3.base);
  return *internal_default_instance();
}


void GameState_Vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:game_state.GameState.Vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameState_Vec3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:game_state.GameState.Vec3)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:game_state.GameState.Vec3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:game_state.GameState.Vec3)
  return false;
#undef DO_
}

void GameState_Vec3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:game_state.GameState.Vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:game_state.GameState.Vec3)
}

::google::protobuf::uint8* GameState_Vec3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:game_state.GameState.Vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game_state.GameState.Vec3)
  return target;
}

size_t GameState_Vec3::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:game_state.GameState.Vec3)
  size_t total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t GameState_Vec3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game_state.GameState.Vec3)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameState_Vec3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:game_state.GameState.Vec3)
  GOOGLE_DCHECK_NE(&from, this);
  const GameState_Vec3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameState_Vec3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:game_state.GameState.Vec3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:game_state.GameState.Vec3)
    MergeFrom(*source);
  }
}

void GameState_Vec3::MergeFrom(const GameState_Vec3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game_state.GameState.Vec3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameState_Vec3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:game_state.GameState.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameState_Vec3::CopyFrom(const GameState_Vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game_state.GameState.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameState_Vec3::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void GameState_Vec3::Swap(GameState_Vec3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameState_Vec3::InternalSwap(GameState_Vec3* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameState_Vec3::GetMetadata() const {
  protobuf_opengl_5fengine_2fgame_5fstate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameState_Mat4::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameState_Mat4::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameState_Mat4::GameState_Mat4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState_Mat4.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:game_state.GameState.Mat4)
}
GameState_Mat4::GameState_Mat4(const GameState_Mat4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      val_(from.val_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:game_state.GameState.Mat4)
}

void GameState_Mat4::SharedCtor() {
}

GameState_Mat4::~GameState_Mat4() {
  // @@protoc_insertion_point(destructor:game_state.GameState.Mat4)
  SharedDtor();
}

void GameState_Mat4::SharedDtor() {
}

void GameState_Mat4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameState_Mat4::descriptor() {
  ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameState_Mat4& GameState_Mat4::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState_Mat4.base);
  return *internal_default_instance();
}


void GameState_Mat4::Clear() {
// @@protoc_insertion_point(message_clear_start:game_state.GameState.Mat4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameState_Mat4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:game_state.GameState.Mat4)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_val())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_val())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:game_state.GameState.Mat4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:game_state.GameState.Mat4)
  return false;
#undef DO_
}

void GameState_Mat4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:game_state.GameState.Mat4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float val = 1;
  for (int i = 0, n = this->val_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->val(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:game_state.GameState.Mat4)
}

::google::protobuf::uint8* GameState_Mat4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:game_state.GameState.Mat4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float val = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->val_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game_state.GameState.Mat4)
  return target;
}

size_t GameState_Mat4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game_state.GameState.Mat4)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float val = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->val_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->val_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameState_Mat4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:game_state.GameState.Mat4)
  GOOGLE_DCHECK_NE(&from, this);
  const GameState_Mat4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameState_Mat4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:game_state.GameState.Mat4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:game_state.GameState.Mat4)
    MergeFrom(*source);
  }
}

void GameState_Mat4::MergeFrom(const GameState_Mat4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game_state.GameState.Mat4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  val_.MergeFrom(from.val_);
}

void GameState_Mat4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:game_state.GameState.Mat4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameState_Mat4::CopyFrom(const GameState_Mat4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game_state.GameState.Mat4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameState_Mat4::IsInitialized() const {
  return true;
}

void GameState_Mat4::Swap(GameState_Mat4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameState_Mat4::InternalSwap(GameState_Mat4* other) {
  using std::swap;
  val_.InternalSwap(&other->val_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameState_Mat4::GetMetadata() const {
  protobuf_opengl_5fengine_2fgame_5fstate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameState_ActorState::InitAsDefaultInstance() {
  ::game_state::_GameState_ActorState_default_instance_._instance.get_mutable()->transform_ = const_cast< ::game_state::GameState_Mat4*>(
      ::game_state::GameState_Mat4::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameState_ActorState::kIdFieldNumber;
const int GameState_ActorState::kTypeFieldNumber;
const int GameState_ActorState::kTransformFieldNumber;
const int GameState_ActorState::kIntPropsFieldNumber;
const int GameState_ActorState::kFloatPropsFieldNumber;
const int GameState_ActorState::kVec3PropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameState_ActorState::GameState_ActorState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState_ActorState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:game_state.GameState.ActorState)
}
GameState_ActorState::GameState_ActorState(const GameState_ActorState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      int_props_(from.int_props_),
      float_props_(from.float_props_),
      vec3_props_(from.vec3_props_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_transform()) {
    transform_ = new ::game_state::GameState_Mat4(*from.transform_);
  } else {
    transform_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:game_state.GameState.ActorState)
}

void GameState_ActorState::SharedCtor() {
  ::memset(&transform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&transform_)) + sizeof(type_));
}

GameState_ActorState::~GameState_ActorState() {
  // @@protoc_insertion_point(destructor:game_state.GameState.ActorState)
  SharedDtor();
}

void GameState_ActorState::SharedDtor() {
  if (this != internal_default_instance()) delete transform_;
}

void GameState_ActorState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameState_ActorState::descriptor() {
  ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameState_ActorState& GameState_ActorState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState_ActorState.base);
  return *internal_default_instance();
}


void GameState_ActorState::Clear() {
// @@protoc_insertion_point(message_clear_start:game_state.GameState.ActorState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int_props_.Clear();
  float_props_.Clear();
  vec3_props_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(transform_ != NULL);
    transform_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&id_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameState_ActorState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:game_state.GameState.ActorState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .game_state.GameState.Mat4 transform = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 int_props = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_int_props())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int_props())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float float_props = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 45u, input, this->mutable_float_props())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_float_props())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .game_state.GameState.Vec3 vec3_props = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vec3_props()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:game_state.GameState.ActorState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:game_state.GameState.ActorState)
  return false;
#undef DO_
}

void GameState_ActorState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:game_state.GameState.ActorState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required .game_state.GameState.Mat4 transform = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_transform(), output);
  }

  // repeated int32 int_props = 4;
  for (int i = 0, n = this->int_props_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->int_props(i), output);
  }

  // repeated float float_props = 5;
  for (int i = 0, n = this->float_props_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      5, this->float_props(i), output);
  }

  // repeated .game_state.GameState.Vec3 vec3_props = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vec3_props_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->vec3_props(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:game_state.GameState.ActorState)
}

::google::protobuf::uint8* GameState_ActorState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:game_state.GameState.ActorState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required .game_state.GameState.Mat4 transform = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_transform(), deterministic, target);
  }

  // repeated int32 int_props = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->int_props_, target);

  // repeated float float_props = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(5, this->float_props_, target);

  // repeated .game_state.GameState.Vec3 vec3_props = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vec3_props_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->vec3_props(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game_state.GameState.ActorState)
  return target;
}

size_t GameState_ActorState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:game_state.GameState.ActorState)
  size_t total_size = 0;

  if (has_transform()) {
    // required .game_state.GameState.Mat4 transform = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transform_);
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t GameState_ActorState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game_state.GameState.ActorState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .game_state.GameState.Mat4 transform = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transform_);

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 int_props = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->int_props_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->int_props_size());
    total_size += data_size;
  }

  // repeated float float_props = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->float_props_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->float_props_size());
    total_size += data_size;
  }

  // repeated .game_state.GameState.Vec3 vec3_props = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->vec3_props_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vec3_props(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameState_ActorState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:game_state.GameState.ActorState)
  GOOGLE_DCHECK_NE(&from, this);
  const GameState_ActorState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameState_ActorState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:game_state.GameState.ActorState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:game_state.GameState.ActorState)
    MergeFrom(*source);
  }
}

void GameState_ActorState::MergeFrom(const GameState_ActorState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game_state.GameState.ActorState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  int_props_.MergeFrom(from.int_props_);
  float_props_.MergeFrom(from.float_props_);
  vec3_props_.MergeFrom(from.vec3_props_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_transform()->::game_state::GameState_Mat4::MergeFrom(from.transform());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameState_ActorState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:game_state.GameState.ActorState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameState_ActorState::CopyFrom(const GameState_ActorState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game_state.GameState.ActorState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameState_ActorState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vec3_props())) return false;
  return true;
}

void GameState_ActorState::Swap(GameState_ActorState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameState_ActorState::InternalSwap(GameState_ActorState* other) {
  using std::swap;
  int_props_.InternalSwap(&other->int_props_);
  float_props_.InternalSwap(&other->float_props_);
  CastToBase(&vec3_props_)->InternalSwap(CastToBase(&other->vec3_props_));
  swap(transform_, other->transform_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameState_ActorState::GetMetadata() const {
  protobuf_opengl_5fengine_2fgame_5fstate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameState::kActorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameState::GameState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:game_state.GameState)
}
GameState::GameState(const GameState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      actors_(from.actors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:game_state.GameState)
}

void GameState::SharedCtor() {
}

GameState::~GameState() {
  // @@protoc_insertion_point(destructor:game_state.GameState)
  SharedDtor();
}

void GameState::SharedDtor() {
}

void GameState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameState::descriptor() {
  ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameState& GameState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_opengl_5fengine_2fgame_5fstate_2eproto::scc_info_GameState.base);
  return *internal_default_instance();
}


void GameState::Clear() {
// @@protoc_insertion_point(message_clear_start:game_state.GameState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actors_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:game_state.GameState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .game_state.GameState.ActorState actors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_actors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:game_state.GameState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:game_state.GameState)
  return false;
#undef DO_
}

void GameState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:game_state.GameState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .game_state.GameState.ActorState actors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->actors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:game_state.GameState)
}

::google::protobuf::uint8* GameState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:game_state.GameState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .game_state.GameState.ActorState actors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->actors(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game_state.GameState)
  return target;
}

size_t GameState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game_state.GameState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .game_state.GameState.ActorState actors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->actors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:game_state.GameState)
  GOOGLE_DCHECK_NE(&from, this);
  const GameState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:game_state.GameState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:game_state.GameState)
    MergeFrom(*source);
  }
}

void GameState::MergeFrom(const GameState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game_state.GameState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actors_.MergeFrom(from.actors_);
}

void GameState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:game_state.GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameState::CopyFrom(const GameState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game_state.GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameState::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->actors())) return false;
  return true;
}

void GameState::Swap(GameState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameState::InternalSwap(GameState* other) {
  using std::swap;
  CastToBase(&actors_)->InternalSwap(CastToBase(&other->actors_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameState::GetMetadata() const {
  protobuf_opengl_5fengine_2fgame_5fstate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace game_state
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::game_state::GameState_Vec3* Arena::CreateMaybeMessage< ::game_state::GameState_Vec3 >(Arena* arena) {
  return Arena::CreateInternal< ::game_state::GameState_Vec3 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::game_state::GameState_Mat4* Arena::CreateMaybeMessage< ::game_state::GameState_Mat4 >(Arena* arena) {
  return Arena::CreateInternal< ::game_state::GameState_Mat4 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::game_state::GameState_ActorState* Arena::CreateMaybeMessage< ::game_state::GameState_ActorState >(Arena* arena) {
  return Arena::CreateInternal< ::game_state::GameState_ActorState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::game_state::GameState* Arena::CreateMaybeMessage< ::game_state::GameState >(Arena* arena) {
  return Arena::CreateInternal< ::game_state::GameState >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
