// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opengl_engine/game_state.proto

#ifndef PROTOBUF_INCLUDED_opengl_5fengine_2fgame_5fstate_2eproto
#define PROTOBUF_INCLUDED_opengl_5fengine_2fgame_5fstate_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_opengl_5fengine_2fgame_5fstate_2eproto 

namespace protobuf_opengl_5fengine_2fgame_5fstate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_opengl_5fengine_2fgame_5fstate_2eproto
namespace game_state {
class GameState;
class GameStateDefaultTypeInternal;
extern GameStateDefaultTypeInternal _GameState_default_instance_;
class GameState_ActorState;
class GameState_ActorStateDefaultTypeInternal;
extern GameState_ActorStateDefaultTypeInternal _GameState_ActorState_default_instance_;
class GameState_Mat4;
class GameState_Mat4DefaultTypeInternal;
extern GameState_Mat4DefaultTypeInternal _GameState_Mat4_default_instance_;
class GameState_Vec3;
class GameState_Vec3DefaultTypeInternal;
extern GameState_Vec3DefaultTypeInternal _GameState_Vec3_default_instance_;
}  // namespace game_state
namespace google {
namespace protobuf {
template<> ::game_state::GameState* Arena::CreateMaybeMessage<::game_state::GameState>(Arena*);
template<> ::game_state::GameState_ActorState* Arena::CreateMaybeMessage<::game_state::GameState_ActorState>(Arena*);
template<> ::game_state::GameState_Mat4* Arena::CreateMaybeMessage<::game_state::GameState_Mat4>(Arena*);
template<> ::game_state::GameState_Vec3* Arena::CreateMaybeMessage<::game_state::GameState_Vec3>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace game_state {

// ===================================================================

class GameState_Vec3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game_state.GameState.Vec3) */ {
 public:
  GameState_Vec3();
  virtual ~GameState_Vec3();

  GameState_Vec3(const GameState_Vec3& from);

  inline GameState_Vec3& operator=(const GameState_Vec3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameState_Vec3(GameState_Vec3&& from) noexcept
    : GameState_Vec3() {
    *this = ::std::move(from);
  }

  inline GameState_Vec3& operator=(GameState_Vec3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameState_Vec3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameState_Vec3* internal_default_instance() {
    return reinterpret_cast<const GameState_Vec3*>(
               &_GameState_Vec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GameState_Vec3* other);
  friend void swap(GameState_Vec3& a, GameState_Vec3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameState_Vec3* New() const final {
    return CreateMaybeMessage<GameState_Vec3>(NULL);
  }

  GameState_Vec3* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameState_Vec3>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameState_Vec3& from);
  void MergeFrom(const GameState_Vec3& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameState_Vec3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // required float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // required float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:game_state.GameState.Vec3)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float x_;
  float y_;
  float z_;
  friend struct ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameState_Mat4 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game_state.GameState.Mat4) */ {
 public:
  GameState_Mat4();
  virtual ~GameState_Mat4();

  GameState_Mat4(const GameState_Mat4& from);

  inline GameState_Mat4& operator=(const GameState_Mat4& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameState_Mat4(GameState_Mat4&& from) noexcept
    : GameState_Mat4() {
    *this = ::std::move(from);
  }

  inline GameState_Mat4& operator=(GameState_Mat4&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameState_Mat4& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameState_Mat4* internal_default_instance() {
    return reinterpret_cast<const GameState_Mat4*>(
               &_GameState_Mat4_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GameState_Mat4* other);
  friend void swap(GameState_Mat4& a, GameState_Mat4& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameState_Mat4* New() const final {
    return CreateMaybeMessage<GameState_Mat4>(NULL);
  }

  GameState_Mat4* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameState_Mat4>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameState_Mat4& from);
  void MergeFrom(const GameState_Mat4& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameState_Mat4* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float val = 1;
  int val_size() const;
  void clear_val();
  static const int kValFieldNumber = 1;
  float val(int index) const;
  void set_val(int index, float value);
  void add_val(float value);
  const ::google::protobuf::RepeatedField< float >&
      val() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:game_state.GameState.Mat4)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< float > val_;
  friend struct ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameState_ActorState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game_state.GameState.ActorState) */ {
 public:
  GameState_ActorState();
  virtual ~GameState_ActorState();

  GameState_ActorState(const GameState_ActorState& from);

  inline GameState_ActorState& operator=(const GameState_ActorState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameState_ActorState(GameState_ActorState&& from) noexcept
    : GameState_ActorState() {
    *this = ::std::move(from);
  }

  inline GameState_ActorState& operator=(GameState_ActorState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameState_ActorState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameState_ActorState* internal_default_instance() {
    return reinterpret_cast<const GameState_ActorState*>(
               &_GameState_ActorState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GameState_ActorState* other);
  friend void swap(GameState_ActorState& a, GameState_ActorState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameState_ActorState* New() const final {
    return CreateMaybeMessage<GameState_ActorState>(NULL);
  }

  GameState_ActorState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameState_ActorState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameState_ActorState& from);
  void MergeFrom(const GameState_ActorState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameState_ActorState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 int_props = 4;
  int int_props_size() const;
  void clear_int_props();
  static const int kIntPropsFieldNumber = 4;
  ::google::protobuf::int32 int_props(int index) const;
  void set_int_props(int index, ::google::protobuf::int32 value);
  void add_int_props(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int_props() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int_props();

  // repeated float float_props = 5;
  int float_props_size() const;
  void clear_float_props();
  static const int kFloatPropsFieldNumber = 5;
  float float_props(int index) const;
  void set_float_props(int index, float value);
  void add_float_props(float value);
  const ::google::protobuf::RepeatedField< float >&
      float_props() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_float_props();

  // repeated .game_state.GameState.Vec3 vec3_props = 6;
  int vec3_props_size() const;
  void clear_vec3_props();
  static const int kVec3PropsFieldNumber = 6;
  ::game_state::GameState_Vec3* mutable_vec3_props(int index);
  ::google::protobuf::RepeatedPtrField< ::game_state::GameState_Vec3 >*
      mutable_vec3_props();
  const ::game_state::GameState_Vec3& vec3_props(int index) const;
  ::game_state::GameState_Vec3* add_vec3_props();
  const ::google::protobuf::RepeatedPtrField< ::game_state::GameState_Vec3 >&
      vec3_props() const;

  // required .game_state.GameState.Mat4 transform = 3;
  bool has_transform() const;
  void clear_transform();
  static const int kTransformFieldNumber = 3;
  private:
  const ::game_state::GameState_Mat4& _internal_transform() const;
  public:
  const ::game_state::GameState_Mat4& transform() const;
  ::game_state::GameState_Mat4* release_transform();
  ::game_state::GameState_Mat4* mutable_transform();
  void set_allocated_transform(::game_state::GameState_Mat4* transform);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_state.GameState.ActorState)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_transform();
  void clear_has_transform();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int_props_;
  ::google::protobuf::RepeatedField< float > float_props_;
  ::google::protobuf::RepeatedPtrField< ::game_state::GameState_Vec3 > vec3_props_;
  ::game_state::GameState_Mat4* transform_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game_state.GameState) */ {
 public:
  GameState();
  virtual ~GameState();

  GameState(const GameState& from);

  inline GameState& operator=(const GameState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameState(GameState&& from) noexcept
    : GameState() {
    *this = ::std::move(from);
  }

  inline GameState& operator=(GameState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameState* internal_default_instance() {
    return reinterpret_cast<const GameState*>(
               &_GameState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GameState* other);
  friend void swap(GameState& a, GameState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameState* New() const final {
    return CreateMaybeMessage<GameState>(NULL);
  }

  GameState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameState& from);
  void MergeFrom(const GameState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GameState_Vec3 Vec3;
  typedef GameState_Mat4 Mat4;
  typedef GameState_ActorState ActorState;

  // accessors -------------------------------------------------------

  // repeated .game_state.GameState.ActorState actors = 1;
  int actors_size() const;
  void clear_actors();
  static const int kActorsFieldNumber = 1;
  ::game_state::GameState_ActorState* mutable_actors(int index);
  ::google::protobuf::RepeatedPtrField< ::game_state::GameState_ActorState >*
      mutable_actors();
  const ::game_state::GameState_ActorState& actors(int index) const;
  ::game_state::GameState_ActorState* add_actors();
  const ::google::protobuf::RepeatedPtrField< ::game_state::GameState_ActorState >&
      actors() const;

  // @@protoc_insertion_point(class_scope:game_state.GameState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::game_state::GameState_ActorState > actors_;
  friend struct ::protobuf_opengl_5fengine_2fgame_5fstate_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GameState_Vec3

// required float x = 1;
inline bool GameState_Vec3::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameState_Vec3::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameState_Vec3::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameState_Vec3::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float GameState_Vec3::x() const {
  // @@protoc_insertion_point(field_get:game_state.GameState.Vec3.x)
  return x_;
}
inline void GameState_Vec3::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:game_state.GameState.Vec3.x)
}

// required float y = 2;
inline bool GameState_Vec3::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameState_Vec3::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameState_Vec3::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameState_Vec3::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float GameState_Vec3::y() const {
  // @@protoc_insertion_point(field_get:game_state.GameState.Vec3.y)
  return y_;
}
inline void GameState_Vec3::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:game_state.GameState.Vec3.y)
}

// required float z = 3;
inline bool GameState_Vec3::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameState_Vec3::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameState_Vec3::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameState_Vec3::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float GameState_Vec3::z() const {
  // @@protoc_insertion_point(field_get:game_state.GameState.Vec3.z)
  return z_;
}
inline void GameState_Vec3::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:game_state.GameState.Vec3.z)
}

// -------------------------------------------------------------------

// GameState_Mat4

// repeated float val = 1;
inline int GameState_Mat4::val_size() const {
  return val_.size();
}
inline void GameState_Mat4::clear_val() {
  val_.Clear();
}
inline float GameState_Mat4::val(int index) const {
  // @@protoc_insertion_point(field_get:game_state.GameState.Mat4.val)
  return val_.Get(index);
}
inline void GameState_Mat4::set_val(int index, float value) {
  val_.Set(index, value);
  // @@protoc_insertion_point(field_set:game_state.GameState.Mat4.val)
}
inline void GameState_Mat4::add_val(float value) {
  val_.Add(value);
  // @@protoc_insertion_point(field_add:game_state.GameState.Mat4.val)
}
inline const ::google::protobuf::RepeatedField< float >&
GameState_Mat4::val() const {
  // @@protoc_insertion_point(field_list:game_state.GameState.Mat4.val)
  return val_;
}
inline ::google::protobuf::RepeatedField< float >*
GameState_Mat4::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:game_state.GameState.Mat4.val)
  return &val_;
}

// -------------------------------------------------------------------

// GameState_ActorState

// required int32 id = 1;
inline bool GameState_ActorState::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameState_ActorState::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameState_ActorState::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameState_ActorState::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GameState_ActorState::id() const {
  // @@protoc_insertion_point(field_get:game_state.GameState.ActorState.id)
  return id_;
}
inline void GameState_ActorState::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:game_state.GameState.ActorState.id)
}

// required int32 type = 2;
inline bool GameState_ActorState::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameState_ActorState::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameState_ActorState::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameState_ActorState::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GameState_ActorState::type() const {
  // @@protoc_insertion_point(field_get:game_state.GameState.ActorState.type)
  return type_;
}
inline void GameState_ActorState::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:game_state.GameState.ActorState.type)
}

// required .game_state.GameState.Mat4 transform = 3;
inline bool GameState_ActorState::has_transform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameState_ActorState::set_has_transform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameState_ActorState::clear_has_transform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameState_ActorState::clear_transform() {
  if (transform_ != NULL) transform_->Clear();
  clear_has_transform();
}
inline const ::game_state::GameState_Mat4& GameState_ActorState::_internal_transform() const {
  return *transform_;
}
inline const ::game_state::GameState_Mat4& GameState_ActorState::transform() const {
  const ::game_state::GameState_Mat4* p = transform_;
  // @@protoc_insertion_point(field_get:game_state.GameState.ActorState.transform)
  return p != NULL ? *p : *reinterpret_cast<const ::game_state::GameState_Mat4*>(
      &::game_state::_GameState_Mat4_default_instance_);
}
inline ::game_state::GameState_Mat4* GameState_ActorState::release_transform() {
  // @@protoc_insertion_point(field_release:game_state.GameState.ActorState.transform)
  clear_has_transform();
  ::game_state::GameState_Mat4* temp = transform_;
  transform_ = NULL;
  return temp;
}
inline ::game_state::GameState_Mat4* GameState_ActorState::mutable_transform() {
  set_has_transform();
  if (transform_ == NULL) {
    auto* p = CreateMaybeMessage<::game_state::GameState_Mat4>(GetArenaNoVirtual());
    transform_ = p;
  }
  // @@protoc_insertion_point(field_mutable:game_state.GameState.ActorState.transform)
  return transform_;
}
inline void GameState_ActorState::set_allocated_transform(::game_state::GameState_Mat4* transform) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transform_;
  }
  if (transform) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transform = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transform, submessage_arena);
    }
    set_has_transform();
  } else {
    clear_has_transform();
  }
  transform_ = transform;
  // @@protoc_insertion_point(field_set_allocated:game_state.GameState.ActorState.transform)
}

// repeated int32 int_props = 4;
inline int GameState_ActorState::int_props_size() const {
  return int_props_.size();
}
inline void GameState_ActorState::clear_int_props() {
  int_props_.Clear();
}
inline ::google::protobuf::int32 GameState_ActorState::int_props(int index) const {
  // @@protoc_insertion_point(field_get:game_state.GameState.ActorState.int_props)
  return int_props_.Get(index);
}
inline void GameState_ActorState::set_int_props(int index, ::google::protobuf::int32 value) {
  int_props_.Set(index, value);
  // @@protoc_insertion_point(field_set:game_state.GameState.ActorState.int_props)
}
inline void GameState_ActorState::add_int_props(::google::protobuf::int32 value) {
  int_props_.Add(value);
  // @@protoc_insertion_point(field_add:game_state.GameState.ActorState.int_props)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameState_ActorState::int_props() const {
  // @@protoc_insertion_point(field_list:game_state.GameState.ActorState.int_props)
  return int_props_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameState_ActorState::mutable_int_props() {
  // @@protoc_insertion_point(field_mutable_list:game_state.GameState.ActorState.int_props)
  return &int_props_;
}

// repeated float float_props = 5;
inline int GameState_ActorState::float_props_size() const {
  return float_props_.size();
}
inline void GameState_ActorState::clear_float_props() {
  float_props_.Clear();
}
inline float GameState_ActorState::float_props(int index) const {
  // @@protoc_insertion_point(field_get:game_state.GameState.ActorState.float_props)
  return float_props_.Get(index);
}
inline void GameState_ActorState::set_float_props(int index, float value) {
  float_props_.Set(index, value);
  // @@protoc_insertion_point(field_set:game_state.GameState.ActorState.float_props)
}
inline void GameState_ActorState::add_float_props(float value) {
  float_props_.Add(value);
  // @@protoc_insertion_point(field_add:game_state.GameState.ActorState.float_props)
}
inline const ::google::protobuf::RepeatedField< float >&
GameState_ActorState::float_props() const {
  // @@protoc_insertion_point(field_list:game_state.GameState.ActorState.float_props)
  return float_props_;
}
inline ::google::protobuf::RepeatedField< float >*
GameState_ActorState::mutable_float_props() {
  // @@protoc_insertion_point(field_mutable_list:game_state.GameState.ActorState.float_props)
  return &float_props_;
}

// repeated .game_state.GameState.Vec3 vec3_props = 6;
inline int GameState_ActorState::vec3_props_size() const {
  return vec3_props_.size();
}
inline void GameState_ActorState::clear_vec3_props() {
  vec3_props_.Clear();
}
inline ::game_state::GameState_Vec3* GameState_ActorState::mutable_vec3_props(int index) {
  // @@protoc_insertion_point(field_mutable:game_state.GameState.ActorState.vec3_props)
  return vec3_props_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::game_state::GameState_Vec3 >*
GameState_ActorState::mutable_vec3_props() {
  // @@protoc_insertion_point(field_mutable_list:game_state.GameState.ActorState.vec3_props)
  return &vec3_props_;
}
inline const ::game_state::GameState_Vec3& GameState_ActorState::vec3_props(int index) const {
  // @@protoc_insertion_point(field_get:game_state.GameState.ActorState.vec3_props)
  return vec3_props_.Get(index);
}
inline ::game_state::GameState_Vec3* GameState_ActorState::add_vec3_props() {
  // @@protoc_insertion_point(field_add:game_state.GameState.ActorState.vec3_props)
  return vec3_props_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_state::GameState_Vec3 >&
GameState_ActorState::vec3_props() const {
  // @@protoc_insertion_point(field_list:game_state.GameState.ActorState.vec3_props)
  return vec3_props_;
}

// -------------------------------------------------------------------

// GameState

// repeated .game_state.GameState.ActorState actors = 1;
inline int GameState::actors_size() const {
  return actors_.size();
}
inline void GameState::clear_actors() {
  actors_.Clear();
}
inline ::game_state::GameState_ActorState* GameState::mutable_actors(int index) {
  // @@protoc_insertion_point(field_mutable:game_state.GameState.actors)
  return actors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::game_state::GameState_ActorState >*
GameState::mutable_actors() {
  // @@protoc_insertion_point(field_mutable_list:game_state.GameState.actors)
  return &actors_;
}
inline const ::game_state::GameState_ActorState& GameState::actors(int index) const {
  // @@protoc_insertion_point(field_get:game_state.GameState.actors)
  return actors_.Get(index);
}
inline ::game_state::GameState_ActorState* GameState::add_actors() {
  // @@protoc_insertion_point(field_add:game_state.GameState.actors)
  return actors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_state::GameState_ActorState >&
GameState::actors() const {
  // @@protoc_insertion_point(field_list:game_state.GameState.actors)
  return actors_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_state

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_opengl_5fengine_2fgame_5fstate_2eproto
